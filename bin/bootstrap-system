#!/usr/bin/env bash

exists () {
    command -v "$1" &> /dev/null;
}

# Ubuntu deps
echo -n "- Checking Ubuntu packages"
if lsb_release -a | grep -q Ubuntu; then
    echo ", will install"
    # TODO Check ip packages already installed
    sudo apt install \
        build-essential \
        cmake \
        curl \
        direnv \
        docker.io \
        fonts-recommended \
        golang-go \
        htop \
        jq \
        keepassx \
        libssl-dev \
        manpages-dev \
        net-tools \
        nmap \
        pkg-config \
        ripgrep \
        shellcheck \
        tmux \
        vim \
        xclip \
        yadm \
        zip \

    # Snaps
    for snap in \
        exercism
    do
        echo -n "- Checking $snap"
        if ! exists "$snap"; then
            echo ", missing, will install"
            sudo snap install "$snap"
        else
            echo ", already exist"
        fi
    done

    # Yank sudo cache
    sudo -k

else
    echo ", not on Ubuntu, skipping"
fi

# Rust
echo -n "- Checking rust"
if ! exists rustup; then
    echo ", missing, will install"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    . "$HOME/.cargo/env"
else
    echo ", already exist"
fi

# Rust utils
# TODO Currently updates will not be pulled in
for crate in \
    cargo-binstall \
    cargo-expand \
    cargo-nextest \
    cargo-release \
    cargo-sweep \
    cargo-watch \
    cross \
    dprint \
    enw \
    git-global \
    see-cat \
    simple-http-server \
    starship \
    wasm-pack \
    wasm-tools
do
    echo -n "- Checking $crate"
    if ! exists "$crate"; then
        echo ", missing, will install"
        cargo install "$crate"
    else
        echo ", already exist"
    fi
done

# Nvm
echo -n "- Checking nvm"
if [ ! -d "$HOME/.nvm" ]; then
    echo ", missing, will install"
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
else
    echo ", already exist"
fi

# VSCode extensions
echo -n "- Checking VSCode extensions"
if ! exists code; then
    echo ", missing, please install!"
else
    echo
    extensions=$(code --list-extensions)

    for ext in \
        bierner.markdown-preview-github-styles \
        k--kato.intellij-idea-keybindings \
        rust-lang.rust-analyzer
    do
        echo -n "  - Checking extension $ext"
        if [[ $extensions == *"$ext"* ]]; then
            echo ", already installed"
        else
            echo ", missing, will install"
            code --install-extension $ext
        fi
    done
fi

# System config
echo "- Checking system config"

CURR_MAX_INOTIFY_INSTANCES=$(cat /proc/sys/fs/inotify/max_user_instances)
if (( CURR_MAX_INOTIFY_INSTANCES < 8192 )); then
  echo "  - Updating fs.inotify.max_user_instances to 8192..."

  sudo sysctl -q fs.inotify.max_user_instances=8192

  if grep -qE "^\s*fs.inotify.max_user_instances\s*=" "/etc/sysctl.conf"; then
    echo "    Warning: fs.inotify.max_user_instances already set in /etc/sysctl.conf, will not change it"
  else
    echo "fs.inotify.max_user_instances = 8192" | sudo tee -a "/etc/sysctl.conf" > /dev/null
  fi
else
  echo "  - fs.inotify.max_user_instances is already >= 8192 (current: $CURR_MAX_INOTIFY_INSTANCES)"
fi
